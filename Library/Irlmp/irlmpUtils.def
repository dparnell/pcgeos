COMMENT @%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) Geoworks 1995 -- All Rights Reserved

PROJECT:	GEOS
MODULE:		IrLMP Library
FILE:		irlmpUtils.def

AUTHOR:		Chung Liu, Mar 15, 1995

MACROS:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	CL	3/15/95   	Initial revision


DESCRIPTION:
	Utility routines.
		
	$Id: irlmpUtils.def,v 1.1 97/04/05 01:07:33 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@

InitCode	segment resource

global	UtilsInit:far
;	Desc: 	Create and initialize the endpoint block and the HugeLMem
;		block.
;	Pass:	nothing
;	Return	if error (not enough memory):
;			carry set
;		else:
;			carry clear

global UtilsExit:far
;	Desc:	Destroys the endpoint block and the HugeLMemBlock
;	Pass:	nothing
;	Return:	nothing

InitCode	ends

UtilsCode	segment resource

global	UtilsAllocEndpointLocked:far
;	Desc:	Create a new IrlmpEnpoint chunk in the endpoint block.
;		Add the chunk to the endpoint table.  Caller must
;		MemUnlockShared the segment.
;	Pass:	cl	= IrlmpLsapSel (could be IRLMP_ANY_LSAP_SEL)
;	Return:	carry clear if okay:
;			*ds:si	= new IrlmpEndpoint
;			ds:di	= same as *ds:si
;			cl	= IrlmpLsapSel (actual LSAP-Sel, if 
;				  IRLMP_ANY_LSAP_SEL was passed in.)
;			ax	= IE_SUCCESS
;		carry set if error:
;			ax	= IrlmpError
;					IE_NO_FREE_LSAP_SEL
;			cx,ds,si,di destroyed			
;
global	UtilsGetEndpointLockedExcl:far
global	UtilsGetEndpointLocked:far
;	Desc:	Get the IrlmpEndpoint, given the chunk handle.
;		Caller must MemUnlockShared the returned lmem segment.
;	Pass:	si	= lptr of IrlmpEndpoint
;	Return:	*ds:si	= IrlmpEndpoint
;		ds:di	= IrlmpEndpoint
;
global	UtilsFreeEndpoint:far
;	Desc:	Free the endpoint with the specified lptr
;	Pass:	si	= lptr of IrlmpEndpoint
;	Return:	nothing
;
global	UtilsTestEndpointBlock:far
;	Desc:	Tests the existence of the endpoint block
;	Pass:	nothing
;	Return:	zero flag set if block doesn't exist
;
global	UtilsGetEndpointByLocalLsap:far
global	UtilsGetEndpointByLsaps:far

global	UtilsCreateSetFixupDS:far
global	UtilsDestroySet:far
global	UtilsClearSet:far
global	UtilsAddToSet:far
global	UtilsRemoveFromSet:far
if FULL_EXECUTE_IN_PLACE
UtilsCode	ends
ResidentXIP	segment	resource
endif

global	UtilsEnumSet:far

if FULL_EXECUTE_IN_PLACE
ResidentXIP	ends
UtilsCode	segment	resource
endif

global	UtilsCountSet:far
global	UtilsMemberpSet:far

global	UtilsAllocPDUData:far
global	UtilsMakeConnectPDU:far
global	UtilsMakeDisconnectPDU:far
global	UtilsMakeConnectConfirmPDU:far
global	UtilsMakeDataPDU:far
global	UtilsGetLsapsFromPDU:far
global	UtilsGetOpCodeFromPDU:far
global	UtilsGetParameterFromPDU:far

global	UtilsEndpointGetLsaps:far
global	UtilsEndpointGetDestLsapID:far

global	UtilsSetRequestedQOS:far
global	UtilsGetRequestedQOS:far
global	UtilsGetQOS:far
global	UtilsSetQOSParams:far

global	UtilsAllocHugeLMemDataLocked:far

UtilsCode	ends

ResidentCode	segment	resource

global	UtilsLoadDGroupDS:far
global	UtilsLoadDGroupES:far

ResidentCode	ends

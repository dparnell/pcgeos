/***********************************************************************
 *
 *	Copyright (c) GeoWorks 1991 -- All Rights Reserved
 *
 * PROJECT:	PC GEOS
 * FILE:	gAppC.goh
 * AUTHOR:	Tony Requist: February 12, 1991
 *
 * DECLARER:	UI
 *
 * DESCRIPTION:
 *	This file defines GenApplicationClass
 *
 *	$Id: gAppC.goh,v 1.1 97/04/04 15:51:46 newdeal Exp $
 *
 ***********************************************************************/


@optimize
@deflib ui

#include <geode.h>
#include <win.h>
#include <localize.h>
@include <Objects/visC.goh>
@include <Objects/genC.goh>
@include <Objects/gInterC.goh>
@include <Objects/gProcC.goh>

@class	GenApplicationClass, GenClass;

@message void MSG_GEN_APPLICATION_MARK_BUSY();	/* XXX */
@message void MSG_GEN_APPLICATION_MARK_NOT_BUSY();	/* XXX */
@message void MSG_GEN_APPLICATION_HOLD_UP_INPUT();	/* XXX */
@message void MSG_GEN_APPLICATION_RESUME_INPUT();	/* XXX */
@message void MSG_GEN_APPLICATION_IGNORE_INPUT();	/* XXX */
@message void MSG_GEN_APPLICATION_ACCEPT_INPUT();	/* XXX */
@message Handle MSG_GEN_APPLICATION_QUERY_UI() = ax;	/* XXX */
@message ApplicationStates MSG_GEN_APPLICATION_GET_STATE() = ax;	/* XXX */
@message optr MSG_GEN_APPLICATION_FIND_MONIKER(
    	    	    	MemHandle destBlock = cx,
			VisMonikerSearchFlags searchFlags = bp,
			DisplayType displayType = dh) = cx:dx;	/* XXX */
@message void MSG_GEN_APPLICATION_SET_TASK_ENTRY_MONIKER(
    	    	    	optr entryMoniker = cx:dx); /* XXX */
@message void MSG_GEN_APPLICATION_GET_DISPLAY_SCHEME(
			DisplayScheme *displayScheme = axcxdxbp); /* XXX */
@message void MSG_GEN_APPLICATION_SET_APP_MODE_MESSAGE(
    	    	    	Message modeMessage = cx); /* XXX */
@message Message MSG_GEN_APPLICATION_GET_APP_MODE_MESSAGE() = cx;	/* XXX */
@message Handle MSG_GEN_APPLICATION_GET_APP_INSTANCE_REFERENCE() = dx;	/* XXX */
@message void MSG_GEN_APPLICATION_SET_APP_INSTANCE_REFERENCE(
    	    	    	Handle appInstance = dx); /* XXX */
@message void MSG_GEN_APPLICATION_SEND_APP_INSTANCE_REFERENCE_TO_FIELD();	/* XXX */
@message void MSG_GEN_APPLICATION_INITIATE_UI_QUIT();	/* XXX */
@message void MSG_GEN_APPLICATION_INSTALL_TOKEN();	/* XXX */
@message void MSG_GEN_APPLICATION_TOGGLE_CURSOR();	/* XXX */
@message AppLaunchFlags MSG_GEN_APPLICATION_GET_LAUNCH_FLAGS() = al;	/* XXX */
@message void MSG_GEN_APPLICATION_SET_APP_LEVEL(
    	    	    	UIInterfaceLevel level = cx);

typedef dword AppFeaturesInfo;
/** converted from struct with the following fields;
    UIInterfaceLevel AFI_uiInterfaceLevel;
    word    AFI_appFeatures;
*/

#define GET_UI_INTERFACE_LEVEL(val) ((UIInterfaceLevel) (val))
#define GET_APP_FEATURES(val) ((word) ((val) >> 16))

@message AppFeaturesInfo MSG_GEN_APPLICATION_GET_APP_FEATURES() = ax.dx;
@message void MSG_GEN_APPLICATION_SET_APP_FEATURES(word features = cx);

@message void MSG_GEN_APPLICATION_DETACH_PENDING();	/* XXX */
@message optr MSG_GEN_APPLICATION_BUILD_STANDARD_DIALOG(
    	    	    	char *customTriggers,
			char *arg2,
			char *arg1,
	        	char *string,
			CustomDialogBoxFlags dialogFlags) = cx:dx; /* XXX */

@message void MSG_GEN_APPLICATION_UNUSED();

@message void MSG_GEN_APPLICATION_DO_STANDARD_DIALOG(@stack
    	    	    	Message dialogMethod,
    	    	    	optr dialogOD,
		    	char *helpContext,
    	    	    	char *customTriggers,
		    	char *arg2,
    	    	    	char *arg1,
    	    	    	char *string,
	            	CustomDialogBoxFlags dialogFlags);  /* XXX */

    /* Standard prototype for dialogMethod send to dialogOD for
       MSG_GEN_APPLICATION_DO_STANDARD_DIALOG */

    @prototype void GEN_APP_DO_STANDARD_DIALOG_MSG(InteractionCommand response = cx); /* XXX */

@message void MSG_GEN_APPLICATION_MARK_APP_COMPLETELY_BUSY();	/* XXX */
@message void MSG_GEN_APPLICATION_MARK_APP_NOT_COMPLETELY_BUSY();	/* XXX */
@message void MSG_GEN_APPLICATION_OPEN_COMPLETE();	/* XXX */
@message void MSG_GEN_APPLICATION_SET_NOT_USER_INTERACTABLE();	/* XXX */
@message void MSG_GEN_APPLICATION_SET_USER_INTERACTABLE();	/* XXX */
@message void MSG_GEN_APPLICATION_SET_ATTACHED_TO_STATE_FILE();	/* XXX */
@message void MSG_GEN_APPLICATION_SET_NOT_ATTACHED_TO_STATE_FILE();	/* XXX */
@message void MSG_GEN_APPLICATION_SET_NOT_QUITTING(); /* XXX */
@message void MSG_GEN_APPLICATION_NOTIFY_MODAL_WIN_CHANGE();	/* XXX */

#define GET_MEASUREMENT_TYPE(m) ((byte) (m))
#define GET_APP_MEASUREMENT_TYPE(m) ((byte) ((m)>>8))

typedef ByteEnum AppMeasurementType;
#define	AMT_US		0
#define AMT_METRIC	1
#define	AMT_DEFAULT	0xff

/*
 * Structure returned by MSG_GEN_APPLICATION_GET_MEASUREMENT_TYPE
 */
typedef struct {
    MeasurementType 	WMT_measurementType; 	/* either metric or U.S. */
    AppMeasurementType	WMT_appMeasurementType;	/* in application */
} WholeMeasurementType;

@message WholeMeasurementType MSG_GEN_APPLICATION_GET_MEASUREMENT_TYPE() = ax;	/* XXX */
@message void MSG_GEN_APPLICATION_SET_MEASUREMENT_TYPE(
    	    	    	AppMeasurementType measurementType = cl);	

typedef struct {
    CharFlags	CFASS_charFlags;
    ShiftState	CFASS_shiftState;
} CharFlagsAndShiftState;

typedef struct {
    ToggleState	TSASC_toggleState;
    byte    	TSASC_scanCode;
} ToggleStateAndScanCode;

@message Boolean MSG_GEN_APPLICATION_TEST_FOR_CANCEL_MNEMONIC( /* INTERNAL */
    	    	    	word character = cx,
			CharFlagsAndShiftState flags = dx,
			ToggleStateAndScanCode state = bp) = carry; /* XXX */

@message void MSG_GEN_APPLICATION_INK_QUERY_REPLY(
    	    	    	InkReturnValue inkReturnValue = cx,
			MemHandle inkDestInfo = bp);
@message void MSG_GEN_APPLICATION_GCN_LIST_SEND_INTERNAL();	/* INTERNAL */
@message ChunkHandle MSG_GEN_APPLICATION_GET_GCN_LIST_OF_LISTS() = ax;	/* XXX */
@reserveMessages 1;
@message (GEN_VISIBILITY_OUTPUT) MSG_GEN_APPLICATION_VISIBILITY_NOTIFICATION; /* XXX */

@message void MSG_GEN_APPLICATION_BRING_WINDOW_TO_TOP(optr window = cx:dx); /* XXX */
@message void MSG_GEN_APPLICATION_LOWER_WINDOW_TO_BOTTOM(optr window = cx:dx); /* XXX */

@message AppAttachFlags MSG_GEN_APPLICATION_GET_ATTACH_FLAGS() = cx; /* XXX */

typedef struct {
    CustomDialogType	ND_dialogType;
    byte    	    	ND_unused1;
    word    	    	ND_unused2;
    optr    	    	ND_dialog;
} NewDialog;

@message void MSG_GEN_APPLICATION_BUILD_DIALOG_FROM_TEMPLATE(
    	    	    	NewDialog *retValue = bpaxdxcx,
    	    	    	optr template = cx:dx);
    	    	    	    	    	

typedef ByteEnum GenAppUsabilityCommand;
#define GAUC_USABILITY 0
/*
 * Indicates the controller should be usable if the feature is ON
 * (this is the default)
 */
#define GAUC_RECALC_CONTROLLER 1
/*
 * Indicates the controller needs to have its features recalculate if the
 * feature bit this table represents changes
 */
#define GAUC_REPARENT 2
/*
 * Indicates the controller should be moved to the GAUFP_reparentObject
 */
#define GAUC_POPUP 3
/*
 * Indicates the controller should be made a popup menu if the feature is ON
 * (unless reverse is set)
 */
#define GAUC_TOOLBAR 4
/*
 * Indicates the controller is a GenBoolean that corresponds to a toolbar
 * state.  Turning the feature off or on forces the GenBoolean to send an
 * apply in addition to the normal behavior.
 */
#define GAUC_RESTART 5
/*
 * Indicates that this generic object need to be restarted via setting
 * not-usable then setting usable.
 */

typedef ByteFlags GenAppUsabilityTupleFlags;
#define GAUTF_END_OF_LIST	0x20
#define GAUTF_OFF_IF_BIT_ON	0x10
#define GAUTF_COMMAND		0x0f

typedef struct {
    GenAppUsabilityTupleFlags	GAUT_flags;
    optr			GAUT_object;	/* actually chunk, resid */
} GenAppUsabilityTuple;


@message void MSG_GEN_APPLICATION_UPDATE_APP_FEATURES (@stack
			optr unReparentObject,
			optr reparentObject,
			GenAppUsabilityTuple *levelTable,
			word tableLength,
			void *table,
			word appOpeningFlag,
			UIInterfaceLevel oldLevel,
			UIInterfaceLevel level,
			word featuresChanged,
			word featuresOn);

@message void MSG_GEN_APPLICATION_UPDATE_FEATURES_VIA_TABLE (@stack
			optr unReparentObject,
			optr reparentObject,
			GenAppUsabilityTuple *levelTable,
			word tableLength,
			void *table,
			word appOpeningFlag,
			UIInterfaceLevel oldLevel,
			UIInterfaceLevel level,
			word featuresChanged,
			word featuresOn);


@message void MSG_GEN_APPLICATION_IACP_NO_MORE_CONNECTIONS( /* PRIVATE */
    	    	    	optr ackOD);
@message word MSG_GEN_APPLICATION_IACP_GET_NUMBER_OF_CONNECTIONS() = cx;

@message void MSG_GEN_APPLICATION_APP_MODE_COMPLETE(	    /*INTERNAL */
    	    	    	optr ackOD = dx:bp);

@message void MSG_GEN_APPLICATION_IACP_SHUTDOWN_ALL_CONNECTIONS();
@message void MSG_GEN_APPLICATION_IACP_REGISTER();
@message void MSG_GEN_APPLICATION_IACP_UNREGISTER();
@message void MSG_GEN_APPLICATION_IACP_COMPLETE_CONNECTIONS();
@reserveMessages 4;

@message void MSG_GEN_APPLICATION_BRING_UP_HELP();

@message void MSG_GEN_APPLICATION_UNUSED_3();
@message void MSG_GEN_APPLICATION_UNUSED_4();
@message void MSG_GEN_APPLICATION_TOGGLE_CURRENT_MENU_BAR();
@message void MSG_GEN_APPLICATION_TOGGLE_FLOATING_KEYBOARD();
@message void MSG_GEN_APPLICATION_TOGGLE_EXPRESS_MENU();
@reserveMessages 1;
@message optr MSG_GEN_APPLICATION_GET_MODAL_WIN() = cx:dx;
@message void MSG_GEN_APPLICATION_UNUSED_2();
@message Boolean MSG_GEN_APPLICATION_CHECK_IF_ALWAYS_INTERACTABLE_OBJECT(
    	    	    	optr objToCheck = cx:dx) = carry;

@message void MSG_GEN_APPLICATION_SET_STATE(
    	    	    	ApplicationStates set = cx,
			ApplicationStates clear = dx);
@message void MSG_GEN_APPLICATION_QUIT_AFTER_UI();
@message word MSG_GEN_APPLICATION_IACP_GET_NUMBER_OF_APP_MODE_CONNECTIONS() = ax;

@protominor UINewForZoomer

@message Boolean MSG_GEN_APPLICATION_CHECK_IF_RUNNING_USER_DO_DIALOG() = ax;
@message void MSG_GEN_APPLICATION_FLOATING_KEYBOARD_CLOSED();
@message word MSG_GEN_APPLICATION_GET_TRANSPARENT_DETACH_LIST() = ax;

@message void MSG_GEN_APPLICATION_CLOSE_COMPLETE(optr ackOD);
@message void MSG_GEN_APPLICATION_FIELD_QUIT_ABORTED();

@protominor UINewFor21

@message void MSG_GEN_APPLICATION_REMOVE_ALL_BLOCKING_DIALOGS();

@message optr MSG_GEN_APPLICATION_GET_FLOATING_KEYBOARD_OD() = cx:dx;

@protoreset

@protominor NewForJediAndBeyond

@message void MSG_GEN_APPLICATION_ROTATE_DISPLAY();

@message void MSG_GEN_APPLICATION_CLOSE_FILE_ACK();

@protoreset

@protominor NewForLizzy

@message DisplayMode MSG_GEN_APPLICATION_CHANGE_DISPLAY_MODE(DisplayMode dm = cx) = cx;

@protoreset

@protominor UINewOptions

@message void MSG_GEN_APPLICATION_OPTIONS_CHANGED();
@message void MSG_GEN_APPLICATION_QUIT_OPTIONS_QUERY();

@protoreset

@protominor UISetTemplateUserLevel

@message void MSG_GEN_APPLICATION_SET_TEMPLATE_USER_LEVEL(UIInterfaceLevel level);

@protoreset

@protominor UIStandardTimedDialog

@message void MSG_GEN_APPLICATION_DO_STANDARD_TIMED_DIALOG(@stack
			word timeout,
			Message dialogMethod,
			optr dialogOD,
			char *helpContext,
			char *customTriggers,
			char *arg2,
			char *arg1,
			char *string,
			CustomDialogBoxFlags dialogFlags);  /* XXX */

    /* Standard prototype for dialogMethod send to dialogOD for
       MSG_GEN_APPLICATION_DO_STANDARD_TIMED_DIALOG */

    @prototype void GEN_APP_DO_STANDARD_TIMED_DIALOG_MSG(InteractionCommand response = cx); /* XXX */

@protoreset

typedef enum /* word */ {
    TO_PRINT_CONTROL=_FIRST_GenApplicationClass
} GenApplicationTravelOption;

    @vardata void HINT_APP_IS_ENTERTAINING;
    @vardata void HINT_APP_IS_EDUCATIONAL;
    @vardata void HINT_APP_IS_PRODUCTIVITY_ORIENTED;

    @vardata optr ATTR_GEN_APPLICATION_PRINT_CONTROL;
    @reloc ATTR_GEN_APPLICATION_PRINT_CONTROL, 0, optr;

    @vardata ChunkHandle TEMP_GEN_APPLICATION_NO_LONGER_USED;
    @vardata optr ATTR_GEN_APPLICATION_KBD_OBJ;
    @reloc ATTR_GEN_APPLICATION_KBD_OBJ, 0, optr;
    @vardata MemHandle TEMP_GEN_APPLICATION_SAVED_ALB;
    @vardata void TEMP_GEN_APPLICATION_ABORT_QUIT;
    @vardata optr ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER;
    @reloc ATTR_GEN_APPLICATION_SAVE_OPTIONS_TRIGGER, 0, optr;

typedef struct {
    Boolean FKI_defaultPosition;
    Boolean FKI_sysModal;
} FloatingKeyboardInfo;

    @vardata FloatingKeyboardInfo  TEMP_GEN_APPLICATION_FLOATING_KEYBOARD_INFO;
    @vardata hptr TEMP_GEN_APPLICATION_EXTRA_STATE_BLOCK;
    @vardata optr TEMP_GEN_APPLICATION_APP_MODE_COMPLETE_ACK_OD;
    @vardata GeodeToken ATTR_GEN_APPLICATION_ADDITIONAL_TOKENS[];
    @vardata void HINT_APPLICATION_NO_INBOX_QUERY_WHEN_FOREGROUND_APP;
    @vardata void HINT_APPLICATION_QUIT_ON_IACP_ALLOW_FILE_ACCESS;

@protominor NewForJediAndBeyond
    @vardata EventHandle TEMP_GEN_APPLICATION_CLOSE_FILE_ACK_EVENT;
@protoreset

@protominor NewForLizzy
    @vardata DisplayMode TEMP_GEN_APPLICATION_DISPLAY_MODE;
@protoreset

@protominor UINewOptions
    @vardata optr ATTR_GEN_APPLICATION_RESET_OPTIONS_TRIGGER;
    @reloc ATTR_GEN_APPLICATION_RESET_OPTIONS_TRIGGER, 0, optr;
@protoreset

typedef WordFlags ApplicationStates;
#define AS_TRANSPARENT			0x4000
#define AS_HAS_FULL_SCREEN_EXCL		0x2000
#define AS_SINGLE_INSTANCE		0x1000
#define AS_QUIT_DETACHING		0x0800
#define AS_AVOID_TRANSPARENT_DETACH	0x0400
#define AS_TRANSPARENT_DETACHING	0x0200
#define AS_REAL_DETACHING		0x0100
#define AS_QUITTING			0x0080
#define AS_DETACHING			0x0040
#define AS_FOCUSABLE			0x0020
#define AS_MODELABLE			0x0010
#define AS_NOT_USER_INTERACTABLE	0x0008
#define AS_RECEIVED_APP_OBJECT_DETACH	0x0004
#define AS_ATTACHED_TO_STATE_FILE	0x0002
#define AS_ATTACHING			0x0001

typedef ByteFlags AppOptFlags;
#define AOF_MULTIPLE_INIT_FILE_CATEGORIES	0x80
typedef AppOptFlags ApplicationOptFlags;


    @instance AppInstanceReference	GAI_appRef = {0,0,NullHandle,{0}};

    @instance Message			GAI_appMode = 0;
    @instance AppLaunchFlags		GAI_launchFlags = 0;
    @instance ApplicationOptFlags	GAI_optFlags = 0;
    @instance word			GAI_appFeatures = 0;
    @instance Handle			GAI_specificUI = 0;
    @instance ApplicationStates		GAI_states = AS_FOCUSABLE | AS_MODELABLE;
    @instance AppAttachFlags		GAI_attachFlags = 0;
    @instance UIInterfaceLevel	    	GAI_appLevel = UIIL_ADVANCED;
    @instance ChunkHandle		GAI_iacpConnects = 0;

    @default GI_states = @default & ~GS_USABLE;
    @default GI_attrs = @default | GA_TARGETABLE;

@endc

@endlib


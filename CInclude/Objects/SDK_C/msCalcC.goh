/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	Copyright (c) GeoWorks 1993 -- All Rights Reserved

PROJECT:	PC SDK
MODULE:		Sample Library -- Mandelbrot Set Library
FILE:		msCalcC.goh

AUTHOR:		Paul DuBois, Aug 27, 1993

ROUTINES:
	Name			Description
	----			-----------

REVISION HISTORY:
	Name	Date		Description
	----	----		-----------
	dubois	8/27/93   	Initial version.

DESCRIPTION:
	Class definitions for the Mandelbrot Set library.
	This file contains the definition of MSetCalcClass.

	$Id: msCalcC.goh,v 1.1 97/04/04 15:51:14 newdeal Exp $

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#ifndef __MSET_CALC_CLASS_GOH
#define __MSET_CALC_CLASS_GOH

@deflib mset		/* See msetC.goh for a description of this keyword */

@include <SDK_C/mset.goh>

/*
 * Since we are defining MSetCalc as a subset of Process,
 * we need to include the requisite .goh file
 */
@include <Objects/processC.goh>
@class	MSetCalcClass, ProcessClass;

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Messages
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*
 * Since classes for threads can have no instance data, we must pass
 * in all the data that the MSetCalc object might need.  To ensure
 * consistency, we use this message prototype when defining our messages.
 */
@prototype void MSG_MSC_PROTO(optr		myMSet,
			      VMFileHandle	vmfh,
			      VMBlockHandle	mscpVM);

/*
 * Start calculating.  Exit when another message arrives for this object,
 * or when all the calculating is done.  Calculations may be re-started by
 * sending this message again.  Be sure to NOT use @call, because this
 * message will not return until the MSet is fully calculated, or
 * calculation is paused or restarted.
 *
 * Context:	 Calculation control
 * Source:	 MSet object
 * Destination:	 MSet object's associated MSetCalc
 * Interception: unlikely
 */
@message(MSG_MSC_PROTO) MSG_MSC_CALCULATE;

/*
 * Has an empty handler -- just here to cause MSG_MSC_CALCULATE to exit.
 *
 * Context:	 Calculation control
 * Source:	 MSet object
 * Destination:	 MSet object's associated MSetCalc
 * Interception: unlikely
 */
@message void MSG_MSC_PAUSE();

/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		Instance data and defaults
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

/*
 * Object classes for threads aren't LMem objects; they don't
 * have instance data, or any other data storage other than the
 * stack itself.  If it needs a place to stick data, it will have
 * to create it itself (or be passed the handle of a newly created
 * block).
 */

@endc

@endlib

#endif	/* __MSET_CALC_CLASS_GOH */

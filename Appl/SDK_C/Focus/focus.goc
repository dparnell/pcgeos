/********************************************************************
 *
 *	Copyright (c) Geoworks 1991-92 -- All Rights Reserved.
 *
 * PROJECT:	Sample Applications
 * MODULE:	Focus
 * FILE:	focus.goc
 *
 * AUTHOR:	Brian Chin, 9/91
 *
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      brianc  9/91            Initial version
 *		RainerB	05/2022			Instructions and monikers added
 *
 * DESCRIPTION:
 *	This application demonstrates use of the Focus hierarchy
 *      [Con 12.5.3].
 *
 *	(Throughout this file you will see references like this:
 *      [Con 7.2.1]. This is a reference to chapter 7, section 7.2.1
 *      of the Concepts manual. [Obj 7.2.1] is a reference to
 *      chapter 7, section 7.2.1 of the Objects manual. You should
 *      use these references to locate further information about the
 *      topic being discussed if anything is unclear.)
 *
 *	The focus hierarchy manages several mechanisms within an
 * 	application. Most importantly, the leaf (bottom) object in the
 * 	focus hierarchy receives all keyboard input from the Input
 * 	Manager. Other objects within the hierarchy may also exhibit
 * 	special behavior by just being within the path of the focus
 * 	hierarchy. (This path is known as the 'active path' of that
 *      hierarchy.) For example, windows along the focus' path may be
 * 	highlighted by the Specific UI.
 *
 * 	The leaf object in the focus hierarchy receives keyboard input
 * 	by receving MSG_META_KBD_CHAR messages sent by the system.
 * 	Different objects may handle this input differently. For
 * 	example, a text object with the focus will directly place all
 * 	keyboard input into its text display. A trigger with the focus
 *	may just interpret Carriage Returns to activate the trigger.
 *
 * RCS STAMP:
 *	$Id: focus.goc,v 1.1 97/04/04 16:37:32 newdeal Exp $
 *
 *******************************************************************/

/********************************************************************
 *		Include files
 *******************************************************************/
    @include <stdapp.goh>

/********************************************************************
 *		Class Definitions
 *******************************************************************/
    @class FocusProcessClass, GenProcessClass;
    @message void MSG_FP_TRANSFER_FOCUS();
    @endc;

/********************************************************************
 *		Class Declarations
 *******************************************************************/
    @classdecl FocusProcessClass, neverSaved;

/********************************************************************
 *		Static Object Resources
 *******************************************************************/

/********************************************************************
 *		AppResource Resource
 *******************************************************************/
@start AppResource;

@object GenApplicationClass FocusApp = {
    GI_visMoniker = list { @FocusTextMoniker };
    GI_comp = @FocusPrimary;
    gcnList( MANUFACTURER_ID_GEOWORKS, GAGCNLT_WINDOWS ) =
        @FocusPrimary;
}

@visMoniker FocusTextMoniker = "C Focus Sample Application";

@end AppResource;

/********************************************************************
 *		Interface Resource
 *******************************************************************/
@start Interface;

@object GenPrimaryClass FocusPrimary  = {
      /* The primary contains two groups of children. One group, the
       * dialogs menu, contains targetable and non-targetable dialog
       * boxes to see how each react to transfers of the focus. This
       * group also contains triggers that may grab the focus. The
       * second group consists of a variety of text objects to similarly
       * illustrate the differences in their use of the focus.
       */
    GI_comp = @DialogsMenu,
              @Text1,
              @Text2,
              @Text3,
              @Text4;
    HINT_SIZE_WINDOW_AS_DESIRED;
}


  /* Dialogs menu. This menu has two children, a non-targetable dialog
   * box containging three GenTriggers and a targetable dialog box
   * containing three GenViews.
   */
@object GenInteractionClass DialogsMenu = {
    GI_visMoniker = 'D', "Dialogs";
    GI_comp = @NonTargetableDialog,
              @TargetableDialog;
    GII_visibility = GIV_POPUP;
}


  /* Non-targetable dialog box with three buttons in it */
@object GenInteractionClass NonTargetableDialog = {
      /* By default, GenInteractionClass objects are non-targetable. */
    GI_visMoniker = 'N', "Normal, non-targetable Dialog";
    GI_comp = @Button1,
              @Button2,
              @Button3;
    GII_visibility = GIV_DIALOG;
}

@object GenTriggerClass Button1 = {
    GI_visMoniker = '1', "Button1";
}

@object GenTriggerClass Button2 = {
      /*
       * Normally, the first child receives the focus exclusive from its
       * parent by default. (In this case, that would be Button1, above.)
       * However, if any sibling contains the hint HINT_DEFAULT_FOCUS, it
       * will instead grab the focus exclusive for that level.
       *
       * Note that on Zoomer, keyboard operation is not used for triggers,
       * so having the focus will not change a trigger's appearance or
       * behavior as it does on the desktop platform.
       */
    GI_visMoniker = '2', "Button2 (HINT_DEFAULT_FOCUS)";
    HINT_DEFAULT_FOCUS;
}

@object GenTriggerClass Button3 = {
     /* Activating this trigger will transfer the focus exclusive from any
      * of the other siblings (Button 1 or Button 2) to Button 3.
      */
    GI_visMoniker = '3', "Button3 (grabs focus)";
    GTI_actionMsg = MSG_FP_TRANSFER_FOCUS;
    GTI_destination = process;
}


  /* Targetable dialog box with three views in it */
@object GenInteractionClass TargetableDialog = {
    GI_visMoniker = 'T', "Targetable Dialog";
    GI_comp = @View1,
              @View2,
              @View3;
      /* By default a GenInteraction is not targetable. To set a
       * GenInteractionClass object targetable, set the GA_TARGETABLE
       * bit in its GI_attrs field.
       */
    GI_attrs = @default | GA_TARGETABLE;
    GII_visibility = GIV_DIALOG;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
}

@object GenInteractionClass View1 = {
    GI_visMoniker = '1', "View1";
}

@object GenInteractionClass View2 = {
    GI_visMoniker = '2', "View2";
      /*
       * Normally the first child receives the default focus.
       * HINT_DEFAULT_FOCUS changes this default behavior so that View2
       * will initially grab the focus from its siblings.
       * HINT_DEFAULT_TARGET performs a similar function.
       */
    HINT_DEFAULT_FOCUS;
    HINT_DEFAULT_TARGET;
}

@object GenInteractionClass View3 = {
    GI_visMoniker = '3', "View3";
}


  /* Four text objects to sit on the primary */
@object GenTextClass Text1 = {
	GI_visMoniker = "Instructions";
	HINT_PLACE_MONIKER_ABOVE;
    GTXI_text = "Use the focus and target commands under swat to view the focus and target hierarchy. Open the dialogs or click on the text objects and use the commands again.";
    HINT_INITIAL_SIZE = 50 | SST_AVG_CHAR_WIDTHS, 5 | SST_LINES_OF_TEXT, 5;
}

@object GenTextClass Text2 = {
	GI_visMoniker = "Default Focus";
	HINT_PLACE_MONIKER_ABOVE;
    GTXI_text = "HINT_DEFAULT_FOCUS";
    HINT_DEFAULT_FOCUS;
}

@object GenTextClass Text3 = {
    GI_visMoniker = "Targetable Text";
	HINT_PLACE_MONIKER_ABOVE;
	GI_attrs = @default | GA_TARGETABLE;
    GTXI_text = "GA_TARGETABLE";
}

@object GenTextClass Text4 = {
	GI_visMoniker = "Default Target Text";
	HINT_PLACE_MONIKER_ABOVE;
    GI_attrs = @default | GA_TARGETABLE;
    GTXI_text = "GA_TARGETABLE, HINT_DEFAULT_TARGET";
    HINT_DEFAULT_TARGET;
}

@end Interface;

/********************************************************************
 *		Code for FocusProcessClass
 *******************************************************************/

/********************************************************************
 *		MSG_FP_TRANSFER_FOCUS
 ********************************************************************
 * SYNOPSIS:	 This message transfers the focus exclusive to
 *		 the object sending the message. [Con 15.5.3.1]
 * PARAMETERS:   void
 * RETURNS:      void
 * SIDE EFFECTS: none
 * STRATEGY:     Simply have the process object grab the focus
 *               exclusively.
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      shreck  9/9/92          Initial Revision
 *******************************************************************/
@method FocusProcessClass, MSG_FP_TRANSFER_FOCUS {

    @call self::MSG_META_GRAB_FOCUS_EXCL();
} /* MSG_FP_TRANSFER_FOCUS */


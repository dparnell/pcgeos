/***********************************************************************
 *
 *	Copyright (c) Geoworks 1991 -- All Rights Reserved
 *
 * PROJECT:	GEOS
 * MODULE:	UICtrl (Sample GEOS application)
 * FILE:	uictrl.goc
 * AUTHOR:	Tony Requist: April 1, 1991
 *
 * REVISION HISTORY:
 *      Name    Date            Description
 *      ----    ----            -----------
 *      tony    4/1/91		Initial version
 *	RainerB	8/18/2022	Type mismatch warning in object 'Text1' fixed
 *				2nd text object (Text2) added
 *
 * DESCRIPTION:
 *	This file source code for the UICtrl application. This code will
 *	be compiled by ???, and then linked by the GLUE linker to produce
 *	a runnable .geo application file.
 *
 * RCS STAMP:
 *	$Id: uictrl.goc,v 1.1 97/04/04 16:37:06 newdeal Exp $
 *
 ***********************************************************************/

/*
 ***************************************************************************
 *		Include files
 ***************************************************************************
 */

@include <stdapp.goh>
#include <font.h>
@include <uitsctrl.goh>

/*
 ***************************************************************************
 *		Constants and structures
 ***************************************************************************
 */

/*
 ***************************************************************************
 *		Global variables
 ***************************************************************************
 */

/*
 ***************************************************************************
 *		Class & Message Definitions
 ***************************************************************************
 */

@class	UICProcessClass, GenProcessClass ;

/* define messages for this class here. */

@endc   /* end of class definition */

@classdecl	UICProcessClass, neverSaved ;

/*
 ***************************************************************************
 *		UI Objects
 ***************************************************************************
 */

/*
 *		Application Object
 */

@start	AppResource ;

@object GenApplicationClass UICApp = {
    GI_visMoniker = list { @UICTextMoniker }
    GI_comp = @Primary;
    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_WINDOWS) = @Primary;
    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_STARTUP_LOAD_OPTIONS) =
	@ToolControl;
    gcnList(MANUFACTURER_ID_GEOWORKS,GAGCNLT_SELF_LOAD_OPTIONS) =
	@TextStyleControl;
}

@visMoniker UICTextMoniker = "C UICtrl Sample Application";

@end	AppResource

/*
 *		Primary window
 */

@start	Interface		/* this resource is for misc UI objects */ ;

@object GenPrimaryClass Primary  = {
    GI_comp = @StylesMenu, @OptionsMenu, @ToolArea1, @Text1, @Text2, @ToolArea2;
    ATTR_GEN_DISPLAY_NOT_MINIMIZABLE;
    HINT_SIZE_WINDOW_AS_DESIRED;
}

/* 
 * Style menu to put an instance of our Style controller into
 */
@object GenInteractionClass StylesMenu = {
    GI_visMoniker = 'S', "Styles";
    GI_comp = @TextStyleControl;
    GII_visibility = GIV_POPUP;
}

/*
 * An instance of the controller object we've created, which allows the
 * user to change text styles.
 */
@object UICTextStyleControlClass TextStyleControl = {
}

/* 
 * Options menu to stick the ToolControl into, where it will turn into a 
 * "Manage Tools..." button
 */
@object GenInteractionClass OptionsMenu = {
    GI_visMoniker = 'O', "Options";
    GI_comp = @ToolControl;
    GII_visibility = GIV_POPUP;
}


/* 
 * Our two control areas.  An app can have as many as it wants.  We'll default
 * to having the text style tools show up in ToolArea1, by placing a tool
 * group for it in that interaction.
 */

@object GenToolGroupClass TextStyleTools = {
    GTGI_controller = TextStyleControl;
    HINT_SAME_ORIENTATION_AS_PARENT;
    HINT_MINIMIZE_CHILD_SPACING;
}

@object GenInteractionClass ToolArea1 = {
    GI_comp = @TextStyleTools;
    HINT_ALLOW_CHILDREN_TO_WRAP;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
}

@object GenInteractionClass ToolArea2 = {
    HINT_ALLOW_CHILDREN_TO_WRAP;
    HINT_ORIENT_CHILDREN_HORIZONTALLY;
}


@chunk char ToolArea1Name[] = "Above text";
@chunk char ToolArea2Name[] = "Below text";

@chunk ToolboxInfo ToolboxList[] = {
	{@ToolArea1, @ToolArea1Name},
	{@ToolArea2, @ToolArea2Name}
};

@chunk ToolGroupInfo ToolGroupList[] = {
	{@TextStyleTools}
};


/* 
 * The ToolControl itself.  Lets the user pick which tools will be visible,
 * & move them around to different tool areas
 */
@object GenToolControlClass ToolControl = {
	GTCI_toolboxList = ToolboxList;
	GTCI_toolGroupList = ToolGroupList;
}


/*
 * 1st Text object to act on
 */
#define UIC_CA_PLAIN 0

@object GenTextClass Text1 = {
    GTXI_text = "It's cool, man!";
    GI_attrs = @default | GA_TARGETABLE;
    GTXI_attrs = @default & ~GTA_USE_TAB_FOR_NAVIGATION;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_EXPAND_HEIGHT_TO_FIT_PARENT;
    ATTR_GEN_TEXT_MULTIPLE_CHAR_ATTR_RUNS = OptrToChunk(@UICCharAttrRuns);
}

@CHAR_ATTR_ELEMENT_ARRAY_HEADER UICCharAttrElements = {
    CHAR_ATTR_FONT_SIZE(FID_DTC_URW_SANS, 18)
};

@RUN_ARRAY_HEADER(UICCharAttrElements) UICCharAttrRuns = {
    TRAE_ALL(UIC_CA_PLAIN),
    TRAE_END
};

/*
 * 2nd Text object to act on
 */

@object GenTextClass Text2 = {
    GTXI_text = "Hello World!";
    GI_attrs = @default | GA_TARGETABLE;
    GTXI_attrs = @default & ~GTA_USE_TAB_FOR_NAVIGATION;
    HINT_EXPAND_WIDTH_TO_FIT_PARENT;
    HINT_EXPAND_HEIGHT_TO_FIT_PARENT;
    ATTR_GEN_TEXT_MULTIPLE_CHAR_ATTR_RUNS = OptrToChunk(@UICCharAttrRuns2);
}

@CHAR_ATTR_ELEMENT_ARRAY_HEADER UICCharAttrElements2 = {
    CHAR_ATTR_FONT_SIZE(FID_DTC_URW_MONO, 22)
};

@RUN_ARRAY_HEADER(UICCharAttrElements2) UICCharAttrRuns2 = {
    TRAE_ALL(UIC_CA_PLAIN),
    TRAE_END
};

@end Interface

/*
 ***************************************************************************
 *		Code for UICProcessClass
 ***************************************************************************
 */
